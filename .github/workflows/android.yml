name: Build Android

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set env
        run: echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $GIT_TAG
          echo ${{ env.GIT_TAG }}

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
          cache: gradle

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install

      - name: Grant execute permission for gradlew
        working-directory: ./android/
        run: chmod +x ./gradlew

      - name: Generate App Version Name
        run: echo ${{ env.GIT_TAG }}

      - name: Bump Version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: ./android/app/build.gradle
          versionCode: ${{ github.run_number }}
          versionName: ${{ env.GIT_TAG }}

      - name: Generate the Android Debug Apk
        working-directory: ./android/
        run: ./gradlew assembleDebug --stacktrace

      - name: Build Release AAB
        working-directory: ./android/
        run: ./gradlew app:bundleDebug

      - name: Upload dev APK
        uses: actions/upload-artifact@v1
        with:
          name: app-dev
          path: ./android/app/build/outputs/apk/debug/app-debug.apk

      - name: Release
        id: create_release
        uses: actions/create-release@v1
        with:
          release_name: Release v.${{ env.GIT_TAG }}
          tag_name: ${{ env.GIT_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/zip
